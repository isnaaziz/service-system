basePath: /
definitions:
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8800
info:
  contact: {}
  description: REST API for user management and authentication
  title: Service System REST API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with username and password
      parameters:
      - description: User credentials
        in: body
        name: body
        required: true
        schema:
          properties:
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout with JWT token
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      - description: JWT token
        in: body
        name: body
        schema:
          properties:
            token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout user
      tags:
      - Auth
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user with username, password, and email
      parameters:
      - description: User credentials
        in: body
        name: body
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /users:
    get:
      description: Get all active users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - User
  /users/{id}:
    delete:
      description: Soft delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Soft delete user
      tags:
      - User
  /users/change-password:
    post:
      consumes:
      - application/json
      description: Change password for the current user
      parameters:
      - description: Password change payload
        in: body
        name: body
        required: true
        schema:
          properties:
            new_password:
              type: string
            old_password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
